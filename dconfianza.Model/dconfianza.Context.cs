//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace dconfianza.Model
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class dconfianzaEntities : DbContext
    {
        public dconfianzaEntities()
            : base("name=dconfianzaEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
    
        public virtual ObjectResult<spContacMessageInsert_Result> spContacMessageInsert(string email, string message, Nullable<int> userID)
        {
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var messageParameter = message != null ?
                new ObjectParameter("Message", message) :
                new ObjectParameter("Message", typeof(string));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spContacMessageInsert_Result>("spContacMessageInsert", emailParameter, messageParameter, userIDParameter);
        }
    
        public virtual ObjectResult<spLocationSelectAll_Result> spLocationSelectAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spLocationSelectAll_Result>("spLocationSelectAll");
        }
    
        public virtual ObjectResult<spSelectActiveWorkersByLocationAndService_Result> spSelectActiveWorkersByLocationAndService(Nullable<int> locationID, Nullable<int> serviceID)
        {
            var locationIDParameter = locationID.HasValue ?
                new ObjectParameter("LocationID", locationID) :
                new ObjectParameter("LocationID", typeof(int));
    
            var serviceIDParameter = serviceID.HasValue ?
                new ObjectParameter("ServiceID", serviceID) :
                new ObjectParameter("ServiceID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spSelectActiveWorkersByLocationAndService_Result>("spSelectActiveWorkersByLocationAndService", locationIDParameter, serviceIDParameter);
        }
    
        public virtual ObjectResult<spSelectServiceByLocationID_Result> spSelectServiceByLocationID(Nullable<int> locationID)
        {
            var locationIDParameter = locationID.HasValue ?
                new ObjectParameter("LocationID", locationID) :
                new ObjectParameter("LocationID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spSelectServiceByLocationID_Result>("spSelectServiceByLocationID", locationIDParameter);
        }
    
        public virtual ObjectResult<spServiceSelectAll_Result> spServiceSelectAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spServiceSelectAll_Result>("spServiceSelectAll");
        }
    
        public virtual ObjectResult<spWorkeReviewSelectByID_Result> spWorkeReviewSelectByID(Nullable<int> workerID)
        {
            var workerIDParameter = workerID.HasValue ?
                new ObjectParameter("WorkerID", workerID) :
                new ObjectParameter("WorkerID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spWorkeReviewSelectByID_Result>("spWorkeReviewSelectByID", workerIDParameter);
        }
    
        public virtual ObjectResult<spWorkerInsert_Result> spWorkerInsert(string firstName, string lastName, string mobilPhone, string workPhone, string email, Nullable<int> locationID, Nullable<int> serviceID, string resume, Nullable<int> createdByID)
        {
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var mobilPhoneParameter = mobilPhone != null ?
                new ObjectParameter("MobilPhone", mobilPhone) :
                new ObjectParameter("MobilPhone", typeof(string));
    
            var workPhoneParameter = workPhone != null ?
                new ObjectParameter("WorkPhone", workPhone) :
                new ObjectParameter("WorkPhone", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var locationIDParameter = locationID.HasValue ?
                new ObjectParameter("LocationID", locationID) :
                new ObjectParameter("LocationID", typeof(int));
    
            var serviceIDParameter = serviceID.HasValue ?
                new ObjectParameter("ServiceID", serviceID) :
                new ObjectParameter("ServiceID", typeof(int));
    
            var resumeParameter = resume != null ?
                new ObjectParameter("Resume", resume) :
                new ObjectParameter("Resume", typeof(string));
    
            var createdByIDParameter = createdByID.HasValue ?
                new ObjectParameter("CreatedByID", createdByID) :
                new ObjectParameter("CreatedByID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spWorkerInsert_Result>("spWorkerInsert", firstNameParameter, lastNameParameter, mobilPhoneParameter, workPhoneParameter, emailParameter, locationIDParameter, serviceIDParameter, resumeParameter, createdByIDParameter);
        }
    
        public virtual ObjectResult<spWorkerReviewInsert_Result> spWorkerReviewInsert(Nullable<int> userID, Nullable<double> workerID, string review, Nullable<double> rating)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var workerIDParameter = workerID.HasValue ?
                new ObjectParameter("WorkerID", workerID) :
                new ObjectParameter("WorkerID", typeof(double));
    
            var reviewParameter = review != null ?
                new ObjectParameter("Review", review) :
                new ObjectParameter("Review", typeof(string));
    
            var ratingParameter = rating.HasValue ?
                new ObjectParameter("Rating", rating) :
                new ObjectParameter("Rating", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spWorkerReviewInsert_Result>("spWorkerReviewInsert", userIDParameter, workerIDParameter, reviewParameter, ratingParameter);
        }
    
        public virtual ObjectResult<spWorkerSelectByID_Result> spWorkerSelectByID(Nullable<int> workerID)
        {
            var workerIDParameter = workerID.HasValue ?
                new ObjectParameter("WorkerID", workerID) :
                new ObjectParameter("WorkerID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spWorkerSelectByID_Result>("spWorkerSelectByID", workerIDParameter);
        }
    
        public virtual ObjectResult<reg_spSelectUserByID_Result> reg_spSelectUserByID(Nullable<int> userID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<reg_spSelectUserByID_Result>("reg_spSelectUserByID", userIDParameter);
        }
    
        public virtual ObjectResult<reg_spSelectUserByEmail_Result> reg_spSelectUserByEmail(string email)
        {
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<reg_spSelectUserByEmail_Result>("reg_spSelectUserByEmail", emailParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> reg_spLoginByEmail(string email, byte[] password)
        {
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("reg_spLoginByEmail", emailParameter, passwordParameter);
        }
    
        public virtual ObjectResult<reg_spFindUserByEmail_Result> reg_spFindUserByEmail(string email)
        {
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<reg_spFindUserByEmail_Result>("reg_spFindUserByEmail", emailParameter);
        }
    
        public virtual ObjectResult<reg_spInsertUser_Result> reg_spInsertUser(string firstName, string lastName, string email, Nullable<long> facebookID, byte[] password)
        {
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var facebookIDParameter = facebookID.HasValue ?
                new ObjectParameter("FacebookID", facebookID) :
                new ObjectParameter("FacebookID", typeof(long));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<reg_spInsertUser_Result>("reg_spInsertUser", firstNameParameter, lastNameParameter, emailParameter, facebookIDParameter, passwordParameter);
        }
    }
}
